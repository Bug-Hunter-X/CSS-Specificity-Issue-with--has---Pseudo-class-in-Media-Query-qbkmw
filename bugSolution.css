The solution involves increasing the specificity of the selector within the media query to ensure it overrides the default `.container` styles.  Here's the corrected CSS:

```css
@media (max-width: 768px) {
  .container:has(.item) {
    background-color: red !important;
  }
}

.container {
  background-color: blue;
  padding: 20px;
}

.item {
  width: 50px;
  height: 50px;
  background-color: green;
}
```

By adding `!important`, we force the style to override any other conflicting styles.  While `!important` should generally be used sparingly, in this case, it provides a direct solution to the specificity conflict.  Alternatively, you could refactor your CSS to avoid such conflicts using more specific selectors in the first place.